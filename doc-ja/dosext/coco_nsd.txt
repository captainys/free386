*******************************************************************************
CoCo(Code of Co-native os) / NSD driver解説  for FM TOWNS
                                                         (C)nabe@abk, 転載自由
*******************************************************************************
[TAB=8] 2023/11/29

###############################################################################
●CoCoの仕組み
###############################################################################

　CoCo は Native(32bit)ドライバ を、後から自由に常駐させたり、解除させたりで
きる仕組みです。TBIOSは、起動時にロードするだけで、それきり解除も何もできま
せんが、CoCoはOS起動後（MS-DOSモード時）に自由に組み換えができます。

-------------------------------------------------------------------------------
●COCO.EXE
-------------------------------------------------------------------------------

　CoCoの本体です。実行することで常駐します。
　BIOS（FM-R系BIOSおよびTOWNS-BIOS）の一部である int 8eh を拡張します。

　CoCo本体はリアルメモリに常駐しますが、組み込んだ NSD ドライバはプロテクト
メモリ（1MBより上位のメモリ）に常駐させます。

* COCO_MEM.EXE / ADDDRV.EXP

　メモリ管理をし、ドライバを追加するための EXE ファイルと EXP ファイルです。
　ADDDRV.EXP にはメモリ管理機構がないらしく、COCO_MEM.EXE を使って呼び出さな
いと多くの場合うまく動作しません。

　COCO_MEM.EXE は、-nocrt オプションなどを指定しても受け付けないようです。
　-bannerオプションをつけると組み込み時の詳細を表示してくれます。

	（例）\hcopy\coco_mem -banner XXXX.nsd

-------------------------------------------------------------------------------
●COCO_END.EXE / DELDRV.EXP
-------------------------------------------------------------------------------

　常駐させたドライバを削除するためのファイルです。
　COCO_END.EXE は内部的に DELDRV.EXP を呼び出しているだけなので、DELDRV.EXP
を直接呼んでも構いません。

　DELDRV.EXP は -banner オプションを付けると詳細を出力します。

	（例）run386 -nocrt deldrv.exp -banner "NSD-ID"

###############################################################################
●COCOのAPI
###############################################################################

　CoCo は FM-R互換BIOS および TOWNS-OS BIOS である、int 8eh を拡張する形で
サービスを提供します。

	mov ax, 0Cxxxh
	int 8eh

-------------------------------------------------------------------------------
●c000h：CoCo確認
-------------------------------------------------------------------------------
	IN	ax = 0c000h

	成功	ah = 0
		bx = 3230h	; Version 
				; if bh>31h success
		;"CoCo Ken"
		cx = 436fh	; 'Co' 
		dx = 436fh	; 'Co'
		si = 204bh	; ' K'
		di = 656eh	; 'en'

	失敗
		ah != 0

※DOS-Extenderの隠しAPIにも出てくる、Kenさんのお名前。

-------------------------------------------------------------------------------
●c002h：機能不明
-------------------------------------------------------------------------------
	IN	ax = 0c002h
		dx = ? (1)

	成功	ah = 0
	失敗
		ah != 0


-------------------------------------------------------------------------------
●c003h：nsdドライバの常駐数取得
-------------------------------------------------------------------------------
	IN	ax = 0c003h

	成功	ah = 0
		bx = 10h / 情報取得（c103h）で必要なバッファサイズ
		cx = 常駐しているドライバの数
		dx = ? (1)

	失敗
		ah != 0

-------------------------------------------------------------------------------
●c005h：何かのデータを受け取り
-------------------------------------------------------------------------------
	IN	ax    = 0c005h
		ds:di = 受取バッファ(128byteコピーされる)

	成功	ah = 0
		bx = ?
		dx = ?
	失敗
		ah != 0

-------------------------------------------------------------------------------
●c10ch 何かを登録
-------------------------------------------------------------------------------
	IN	ax = 0c10ch
		si = 0
			cx = 2
			dx = b701h
			cx = 3
			dx = b001h

	成功	ah = 0
	失敗
		ah != 0

　EXP起動時、初期化処理でこれを呼び出さないと TMENU.EXG が起動しない。

-------------------------------------------------------------------------------
●c103h：NSDドライバ常駐情報の取得
-------------------------------------------------------------------------------
	IN	ax    = 0c103h
		cx    = ドライバの常駐番号 (0 to n-1)
		ds:di = 16 byte buffer

	成功	ah = 0
                cx = 常駐している数(n)
		bx = cs (LDT)
		dx = ds (LDT)

		ds:di 00-07 byte  CSのセグメントデスクリプタ形式
		ds:di 08-0f byte  DSのセグメントデスクリプタ形式
			※ただし base は物理アドレス、limit は byte 単位

	失敗
		ah != 0

-------------------------------------------------------------------------------
●c207h：32bitルーチンをコールするためのプロシジャー登録
-------------------------------------------------------------------------------
	IN	ax    = 0c207h
		dx:bx = 32bitルーチンコールのための far call procedure pointer
		di    = ?
		si    = ?
		cx    = ?

	成功	ah  = 0
	失敗	ah != 0

	CoCoのリアル側メモリの cs:[12ebh] から順に bx dx di si cx と書き込まれる。
	ただ dx:bx 以外は使用していなそう……。
	（例） 0715 2524 8C21 0000 0800

	dx:bxは int 21h/ax=250dh の eax で返されるプロシジャーと同一。

	forrbios.nsdで使用されている模様。


-------------------------------------------------------------------------------
●ce04h：指定のNSDドライバ常駐情報の取得
-------------------------------------------------------------------------------
	IN	ax    = 0ce04h
		ds:dx = "ID文字列"のオフセット

	成功	ah = 0
		cx = NSDのcs
		dx = NSDのds

	失敗
		ah != 0		見つからない


-------------------------------------------------------------------------------
●他（機能不明）
-------------------------------------------------------------------------------
	ax = c009h
	ax = c10ch

	ax = c100h
	ax = c10bh


###############################################################################
●NSDファイル形式
###############################################################################

　NSDファイルは、直接実行できないEXPファイルです。
　メモリ（ファイル）先頭におくデータのフォーマットが決まっています。

	dd	0ffffffffh	; +00h
	dw	8000h		; +04h : flags
	dw	0110h		; +06h : strategy entry
	dw	012ah		; +08h : interrupt entry
	db	"FORRBIOS"	; +0ah : ID tag
	db	"DOSNAD02"	; +12h : MAGIC
	dd	0		; +1ah ?
	dd	0		; +1dh ?
	dd	0		; +22h ?
	dd	0		; +26h : DS selector, Write by CoCo

　これは NSDファイル をロードしたときの、メモリ先頭からの状態てす。
（通常のEXPファイルの場合、ヘッダを除く +200h 番地からの状態）

　ファイル構造は、MS-DOSの.SYSデバイスドライバを模してあります。

-------------------------------------------------------------------------------
●+00h (4byte) 次のデバイスドライバへのリンク情報
-------------------------------------------------------------------------------

　off:seg形式の次のドライバへのリンク情報です。

　ファイル内に1つのデバイスドライバしかない時は 0ffffffffh。
複数デバイスのファイルにCoCoが対応しているかは不明です。

-------------------------------------------------------------------------------
●+04h (2byte) デバイス属性（デバイスアトリビュート）
-------------------------------------------------------------------------------

　2byteのデータのうち、bit15 が 0 ならブロックデバイス、bit15 が 1 なら
キャラクタデバイスを示します。それぞれ説明はビットが立っている時です。
　8000h以外にCoCoが対応しているかは不明です。

　キャラクタデバイス
	bit 15	1
	bit 14	IOCTRLサポート
	bit 13	OUTPUT UNTIL BUSYサポート
	bit 12	0
	bit 11	OPEN/CLOSE/RemovableMedia サポート
	bit 10	0
	bit  9	0
	bit  8	0
	bit  7	一般 IOCTL 問い合わせのサポート (DOS 5+)
	bit  6	一般 IOCTL サポート
	bit  5	0
	bit  4	CON デバイス (INT 29h サポート)
	bit  3	CLOCK デバイス
	bit  2	NUL デバイス
	bit  1	標準出力
	bit  0	標準入力

　ブロックデバイス
	bit 15	0
	bit 14	IOCTRLサポート
	bit 13	not IBM format（NON FAT）
	bit 12	0
	bit 11	OPEN/CLOSE/RemovableMedia サポート
	bit 10	0
	bit  9	0
	bit  8	0
	bit  7	一般 IOCTL 問い合わせのサポート (DOS 5+)
	bit  6	一般 IOCTL サポート
	bit  5	0
	bit  4	0
	bit  3	0
	bit  2	0
	bit  1	32bit セクタ
	bit  0	0

-------------------------------------------------------------------------------
●+06h (2byte) strategy entry
-------------------------------------------------------------------------------

　呼び出し側から far call される、初期設定用のアドレスです。

　interrupt で処理されるリクエストのアドレス (ES:EBX) を保存します。

リクエストパケットのヘッダ
	+00h	b	ヘッダの長さ
	+01h	b	ユニット番号
	+02h	b	リクエストコマンド
	+03h	w	ステータスコード（エラーコード）
	+05h-0Ch	Reserved

　ステータスコード。
	bit 15		error
	bit 12-14	reserved
	bit 9		Busy
	bit 8		Done
	bit 0-7		エラーコード（bit 15=1の時のみ）

　CoCoドライバでは、リクエストコマンドぐらいしか見ていないようです。

　DOSの仕様だとサイズは 15h byteで、30 byte 程度あれば足りるようです。

-------------------------------------------------------------------------------
●+08h (2byte) interrupt entry
-------------------------------------------------------------------------------

　far call される処理アドレスです。ファンクションを提供します。
　ここを call する前に、strategy entry を call してパケットを登録しておきます。

・リクエストコマンド一覧
	00h	初期化。おそらくNSDが最初にロードされた時に呼ばれます。
	14h	削除。おそらくNSDが削除される前に呼ばれます。
	c0h	sleep。EXP終了前に、DOS-Extenderによって呼ばれます。
	c1h	wakeup。EXP実行前に、DOS-Extenderによって呼ばれます。

　c0/c1はCoCoの拡張です。
　DOSコマンドは他にもありますが、CoCoではおそらく使われていないと思われます。

-------------------------------------------------------------------------------
●+0Ah (8byte) デバイス名
-------------------------------------------------------------------------------

　デバイス名。8文字に満たない場合はスペースで埋めます。

　ブロックデバイスの場合は、サポートドライブ数ですが、CoCoではおそらく存在
しないでしょう。

-------------------------------------------------------------------------------
●+12h (8byte) マジックID
-------------------------------------------------------------------------------

　CoCo/NSDを示す文字列です。"DOSNAD02"で固定です。

　CoCo実行ファイル、RUN386のいずれも「DOSNAD02」の文字列が埋め込まれています。

-------------------------------------------------------------------------------
●+1Ah (4byte)
●+1Eh (4byte)
●+22h (4byte)
-------------------------------------------------------------------------------

　0固定。予約？

-------------------------------------------------------------------------------
●+26h (4byte)
-------------------------------------------------------------------------------

　CoCoがメモリ配置時に配置した際に、DSの値を書き込むようです。


-------------------------------------------------------------------------------
●その他
-------------------------------------------------------------------------------

　sidework機能を提供する場合は、初期化処理時に、TBIOSメモリに直接データ
を書き込んで登録するようです。

　NSDに対して操作をしたい場合は、int 8eh/ax=ce04h などで目的のIDのドラ
イバを確認し、その中の（自分で決めた）特定の番地に操作用エントリー情報
などを書いておきます。


###############################################################################
●参考文献
###############################################################################

・msdos.txt (doc-ja/dos/msdos.txt として収録)
・フレコレ9収録「ＢＧＭプレーヤ」（野村さん作） / NSDソース付
