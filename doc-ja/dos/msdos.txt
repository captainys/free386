============================================================================
			   ＭＳ−ＤＯＳ資料

			  β版 Version 0.04

			  Written by kattyo.
============================================================================

※ＴＡＢサイズ８でお読み下さい。
※【注意】ほとんどは私自身試してない物なので, 必ず at your own risk でお願い
　します. (at your own risk = あなた自身のリスクで)
※私の英文翻訳能力はたかがしれているので, あまり信用しないで下さい. 
※すべてが Interrupt List の翻訳結果, と言うわけではない. 
※また, Interrupu List に書かれている事を全て書いてはいない. 
　面倒くさいものは省略してある. 


このテキストでは、主に、MS-DOS の通常はあまり関係のない資料を載せます。

MSDOS.TXT  ＰＳＰの内容
MSDOS.TXT  EXEファイルヘッダの内容
MSDOS.TXT  デバイスヘッダ
MSDOS.TXT  リクエストヘッダ
MSDOS.TXT  リクエストヘッダのステータスワード
MSDOS.TXT  リクエストヘッダにセットされるエラーコード
MSDOS.TXT  コマンド番号
MSDOS.TXT  INT 21H 以外の INT 2?H 系の解説

----------------------------------------------------------------------------

--------------
□ＰＳＰの内容
--------------
00h-01h  WORD   INT20hのアドレス (CP/M 互換のため)
02h-03h  WORD   メモリの最上位
04h      BYTE   00h
05h-09h         MSDOS.SYS への FAR CALL (オペコード 9A ?? ?? ?? ??)
0Ah-0Dh  DWORD  終了アドレス
0Eh-11h  DWORD  CTRL+C 抜けだしアドレス
12h-15h  DWORD  致命的エラーハンドラアドレス
16h-17h  WORD	親プロセスのPSP （非公開）
18h-2Bh  18h	ファイルテーブル（非公開）
2Ch-2Dh  WORD   環境領域へのポインタ(セグメントアドレス)
2Eh-2Fh  WORD   SP 退避領域（非公開）
30h-31h  WORD	SS 退避領域（非公開）
32h-4Fh         MS-DOS予約
50h-51h  WORD   DOSファンクションコール (オペコード CD 21)
52h      BYTE   RETF (オペコード CB)
53h-5Bh         MS-DOS予約
5Ch-6Bh  15     第１ＦＣＢ（非オープン）
6Ch-7Fh  20     第２ＦＣＢ（非オープン）
80h      BYTE   パラメータの長さ(バイト数). 最後の 0DH は含まれない.
81h-FFh  STRING コマンドパラメータ. デフォルト DTA. 

-------------------
□EXEファイルヘッダ
-------------------
00h-01h  WORD   ヘッダID 'M','Z'(4DH,5AH).
02h-03h  WORD   最終ページのサイズ(1ページ=512バイト). BYTE 単位.
04h-05h  WORD   ファイルのページ数(1ページ=512バイト). 繰り上げ.
06h-07h  WORD   リロケートの項目数.
08h-09h  WORD   ヘッダのパラグラフ数(16倍した位置からロードモジュールが始まる)
0Ah-0Bh  WORD   最小必要メモリ(パラグラフ単位)
0Ch-0Dh  WORD   最大必要メモリ(パラグラフ単位)
0Eh-0Fh  WORD   SSのオフセット
10h-11h  WORD   SPの初期値
12h-13h  WORD   SUM(Overflowを無視したﾌｧｲﾙ内の全ワードのネガティブサム)
14h-15h  WORD   IPの初期値
16h-17h  WORD   CSのオフセット
18h-19h  WORD   リロケーションテーブルの位置
1Ah-1Bh  WORD   オーバーレイ番号

-----------------
□ デバイスヘッダ
-----------------
00h  WORD   デバイスリンク・オフセット
02h  WORD   デバイスリンク・セグメント
04h  WORD   デバイス属性ワード
06h  WORD   ストラテジルーチン・オフセット
08h  WORD   割り込みルーチン・オフセット
0Ah-11h     名前／ユニット・フィールド

　・ストラテジ・ルーチン
　　    ストラテジ・ルーチンのアドレスは、デバイス・ヘッダのオフセット0006h
　　  に記憶されています。
　　    MS-DOSは最初にストラテジ・ルーチンを呼び出します。このとき、ES:BX レ
　　  ジスタを介してリクエスト・ヘッダのポインタを渡します。
　　    ストラテジ・ルーチンの役割はリクエストヘッダのポインタを受け取り、記
　　  憶することです。

  ・割り込みルーチン
        デバイス・ドライバ本体の処理はここに記載されています。
        MS-DOSはリクエスト・ヘッダにコマンド番号、必要なパラメータをセットし、
      割り込みルーチンを呼びます(FAR CALL)
        割り込みルーチンでは必要な処理を行った後、エラー・コードとステータス
      をリクエストヘッダにセットして、MS-DOSにもどります。
      　割り込みルーチンは、リクエストヘッダのコマンド番号を見て対応する処理
      を行います。
      　最初にコマンド番号0(init)が一回だけ呼ばれます。

-------------------
□ リクエストヘッダ
-------------------

00h      BYTE   リクエスト・ヘッダの長さ
01h      BYTE   ブロックデバイスのユニット数
02h      BYTE   コマンド番号
03h-04h  WORD   リターンステータス・ワード
05h-0Ch         予約
0Dh      BYTE   メディアID
0Eh-0Fh  WORD   データ転送領域のオフセット
10h-11h  WORD   データ転送領域のセグメント
12h-13h  WORD   転送バイト数／セクタ数
14h      BYTE   開始セクタ番号

-------------------------------------
□ リクエストヘッダのステータスワード
-------------------------------------
15     エラー
12-14  予約
9      Busy
8      Done
0-7    ビット15がセットの時エラーコード

---------------------------------------------
□ リクエストヘッダにセットされるエラーコード
---------------------------------------------

00h  書き込み禁止(ライトプロテクト等)
01h  存在しないドライブを指定
02h  ドライブが準備できていない
03h  無効なコマンドの指定
04h  CRCｴﾗｰ, ﾃﾞｰﾀｴﾗｰ
05h  ﾘｸｴｽﾄﾍｯﾀﾞの長さが不正, コマンドパケットの長さが間違っている
06h  シークエラー
07h  無効なメディアを指定, メディアタイプが間違っている
08h  指定されたセクタが存在しない, セクタが見つからない
09h  プリンタ用紙切れ
0Ah  書き込みｴﾗｰ
0Bh  読み込みｴﾗｰ
0Ch  何かのｴﾗｰ
0Dh  未使用
0Eh  未使用
0Fh  不正なディスク交換

---------------
□ コマンド番号
---------------

No B C  内容
-- - - ---------------------
0  o o 初期化
1  o   ﾒﾃﾞｨｱﾁｪｯｸ
2  o   BPB作成
3  o o IOCtl入力
4  o o 読み込み
5    o 非破壊入力(待ち無し)
6    o 入力状況
7    o 入力ﾌﾗｯｼｭ
8  o o 書き込み
9  o   書き込み(ﾍﾞﾘﾌｧｲあり)
10   o 出力状況
11   o 出力ﾌﾗｯｼｭ
12 o o IOCtl出力
13 o o ﾃﾞﾊﾞｲｽ・ｵｰﾌﾟﾝ
14 o o ﾃﾞﾊﾞｲｽ・ｸﾛｰｽﾞ
15 o   交換可能ﾒﾃﾞｨｱ
16 o o BUSYまで出力
----------------------------
No B C  内容
----------------------------
23 o   論理ﾃﾞﾊﾞｲｽ取得
24 o   論理ﾃﾞﾊﾞｲｽ設定
25 o o 一般IOCtlﾘｸｴｽﾄ

C->キャラクタ・デバイス
B->ブロック・デバイス

-----------------------------------------
□ MS-DOS INT 21H 以外の INT 2?H 系の説明
-----------------------------------------

□INT 20H
〇プログラムの終了
	IN  CS PSPのパラグラフ番号(セグメントアドレス)

□INT 22H
〇プログラム終了アドレス格納用ベクタ
	参考 ここに、現在実行中のプログラムの打ち切りアドレスが入っている。

□INT 23H
〇コントロールＣ処理アドレス格納用ベクタ
	参考 ここに、[CTRL]+[C] が押された際にジャンプするアドレスが書かれて
	     いる。
	活用方法
	(1) DOSのファンクションコール 25H で INT 23H のベクタ設定を行えば、
	    独自のコントロールＣ対処ルーチンを作成することが出来る。
	(2) もし (1) で説明したように、ベクタを設定しても、元に戻す必要は無い。
	    なぜなら、プログラム終了時に、自動的に PSP に保存してあった本来の
	    [CTRL]+[C] 処理ルーチンアドレスにベクタが書き戻されるためである。
	注意
	(3) もし 上記で説明したように、独自の [CTRL]+[C] のルーチンを作った
	    場合、その処理ルーチン内で DOSのファンクションコール を行った場合、
	    さらにそこで [CTRL]+[C] が押されて、再入が起こる可能性があるので、
	    再入に対して、排他制御などが必要である。
	(4) [CTRL]+[C] を押した際に表示される "^C" という文字列を消すことは
	    出来ない。なぜなら、ユーザーが設定した処理ハンドラに制御が移る前に
	    すでに "^C" が表示されてしまうからである。もし、表示させたく無い
	    場合は、標準出力をクローズすればおそらく表示されない。

□INT 24H
〇致命的エラー処理アドレス格納用ベクタ
	IN  AH エラータイプ・処理フラグ
	    AL AH の bit 7 がセットのとき, ドライブ番号
	    BP:SI デバイスドライバヘッダ
	    DI AH の bit 7 がセットのとき, 下位バイトがエラーコード
	Ret AL 中止(Abort)=0, 再試行(Retry)=1, 無視(Ignore)=2, 失敗(Fail)=3
	参考 ここに、致命的エラー(ディスク関係など)を処理するためのアドレスが
	     書かれている。
	活用方法
	(1) 致命的エラーとは、例えばディスクアクセスをしようとしたときに、ディ
	    スクが入っていない、だとか、ライトプロテクトされている、等のような,
	    いわゆるソフトウェア側では対処不可能なようなエラーのことである。
	(2) DOSのファンクションコール 25H でベクタ設定を行えば、致命的エラーに
	    対する独自の処理を記述することが出来る。
	(3) この処理ルーチンでは、割り込み禁止の状態にしておかなければならない.
	(4) MSDOS.SYS に戻るには、SS,SP,DS,ES,BX,CX,DX レジスタの内容を保存し
	    ておかなければならない。MSDOS.SYS では 保存を行っていない。
	(5) MSDOS.SYS へは、IRET 命令で戻る必要がある。
	(6) MSDOS.SYS へ戻る場合は、AL レジスタに、0=中止, 1=再試行, 2=無視, 
	    3=失敗 のいずれかの番号を入れておく。
	(7) AL レジスタに 0=中止 を入れた場合、実行中のプログラムは終了してし
	    まう。
	(8) この処理ルーチン内では、DOSのファンクションコールの 01H 〜 0CH, 
	    30H, 59H 以外を使用してはいけない。
	(9) 同時に、独自の [CTRL]+[C] 処理ルーチンを設定している場合は、致命的
	    エラー処理ルーチン内で DOSのファンクションコール 01H 〜 0CH を実行
	    中に押された場合に、[CTRL]+[C] 処理ルーチン内では、DOS のファンク
	    ションコールの 01H 〜 0CH, 30H, 59H 以外を使ってはならない。
	(10)MSDOS.SYS を介さずにプログラムに戻る場合は、スタックの最後の 3 WORD
	    (MSDOS.SYS へ戻るアドレスがある) を捨てて、IRET 命令を使用する。こ
	    うすることにより、エラーの発生の原因の命令(INT 21H)の次よりプログ
	    ラムが再開される。(非明確情報)
	(11)この場合、次に DOSの 0CH 以上のファンクションコール を行うまで、DOS
	    は不安定な状態になる。
	(12)呼び出されたときのスタックの内容:
		DWORD	INT 24H から戻るアドレス (INT命令によって積まれる)
		WORD	フラグレジスタ           (INT命令によって積まれる)
		WORD	AX
		WORD	BX
		WORD	CX
		WORD	DX
		WORD	SI
		WORD	DI
		WORD	BP
		WORD	DS
		WORD	ES
		DWORD	INT 21H から戻るアドレス (INT命令によって積まれる)
		WORD	フラグレジスタ           (INT命令によって積まれる)
	(13)呼び出されたときの AL の内容
		bit 7	0 = DISK I/O ERROR
			1 = ブロックデバイス   = メモリ中 FAT イメージが不正
			    キャラクタデバイス = DI にエラーコード
		bit 6	(未使用)
		    5	I:無視 サポート
		    4	R:再試行 サポート
		    3	F:失敗 サポート
		  2-1	ディスク関係
		  	00=DOS, 01=FAT, 10=ルートディレクトリ, 11=データ
		    0	1 = 書き込み, 0 = 読み込み

□INT 25H
〇物理セクタ読み込み (32MB未満ドライブ)
	IN  AL ドライブ番号(0=A,1=B...)
	    DS 読み込みデータバッファ セグメントアドレス
	    BX 読み込みデータバッファ オフセットアドレス
	    CX 読み込みセクタ数
	    DX 読み込みを開始する論理セクタ番号(セクタの通し番号)
	Ret CF 0 正常に読み込まれた
	       1 エラー
	         AL 致命的エラーのエラー番号
	破壊 セグメントレジスタ以外全て
	注意
	(1) 致命的エラーは起きない。
	(2) INT 25H から戻ってきたときに IO.SYS では、FAR RET で戻ってきていて,
	    FLAGS レジスタは POP されていない。従って、戻ってきたプログラムの方
	    で、POPF、もしくは SUB SP,2 しなければならない。

□INT 25H
〇物理セクタ読み込み (32MB以上ドライブ)
	[3.31+]
	IN  AL ドライブ番号(0=A,1=B...)
	    CX FFFFh
	    DS:BX ディスク読み込みパケット
	Ret CF 0 正常に読み込まれた
	       1 エラー
	         AL 致命的エラーのエラー番号
	         AH ステータス
	         AX 0207 64KB 以上セクタがある
	破壊 セグメントレジスタ以外全て
	注意
	(1) 致命的エラーは起きない。
	(2) INT 25H から戻ってきたときに IO.SYS では、FAR RET で戻ってきていて,
	    FLAGS レジスタは POP されていない。従って、戻ってきたプログラムの方
	    で、POPF、もしくは SUB SP,2 しなければならない。
	(3) ディスク読み込みパケット
		00h	DWORD	セクタ番号
		04h	WORD	読み込むセクタ数
		06h	DWORD	読み込むメモリアドレス

□INT 26H
〇物理セクタ書き込み (32MB未満ドライブ)
	IN  AL ドライブ番号
	    DS 書き込みデータバッファ セグメントアドレス
	    BX 書き込みデータバッファ オフセットアドレス
	    CX 書き込みセクタ数
	    DX 書き込みを開始する論理セクタ番号(セクタの通し番号)
	Ret CF 0 正常に書き込まれた
	       1 エラー
	         AL 致命的エラーのエラー番号
	破壊 セグメントレジスタ以外全て
	注意
	(1) 致命的エラーは起きない。
	(2) INT 25H から戻ってきたときに IO.SYS では、FAR RET で戻ってきていて,
	    FLAGS レジスタは POP されていない。従って、戻ってきたプログラムの方
	    で、POPF、もしくは SUB SP,2 しなければならない。

□INT 26H
〇物理セクタ書き込み (32MB以上ドライブ)
	IN  AL ドライブ番号
	    CX FFFFh
	    DS:BX ディスク書き込みパケット
	Ret CF 0 正常に書き込まれた
	       1 エラー
	         AL 致命的エラーのエラー番号
	         AH ステータス
	         AX 0207h 64KB以上セクタがある
	破壊 セグメントレジスタ以外全て
	注意
	(1) 致命的エラーは起きない。
	(2) INT 25H から戻ってきたときに IO.SYS では、FAR RET で戻ってきていて,
	    FLAGS レジスタは POP されていない。従って、戻ってきたプログラムの方
	    で、POPF、もしくは SUB SP,2 しなければならない。
	(3) ディスク書き込みパケット
		00h	DWORD	セクタ番号
		04h	WORD	書き込むセクタ数
		06h	DWORD	書き込むデータのあるメモリアドレス

□INT 27H
〇プログラムの常駐終了
	IN  CS PSPのパラグラフ番号(セグメントアドレス)
	    DX 常駐させるパラグラフサイズ
	Ret なし
	備考 開かれているファイルは閉じられない. 
	     DOS 2.x では少なくとも 110h のパラグラフが, DOS 3.x 以降では少
	     なくとも 60h のパラグラフが常駐終了のために必要である. 

□INT 28H
〇コンソール入力時に呼び出されるアイドル利用ルーチン
	IRet 全てのレジスタを保存する
	解説 このベクタは、DOSファンクションコールのコンソール入力の途中で、
	     常に呼び出されている。
	活用方法
	(1) このベクタを DOSのファンクションコール 25H でフックすれば、コン
	    ソール入力の入力待ちの間になにか実行することが出来る。
	(2) このベクタをフックして何か処理をする場合、INT 21H の 00H 〜 0CH
	    以外の INT 21H ファンクションコールを利用することが出来る。

□INT 29H
〇高速コンソール出力
	IN  AL 出力するASCIIコード
	Ret なし

□INT 2EH
〇パラメータを渡し SHELL(COMMAND.COM) 実行
	IN  DS:SI コマンドライン(含む COMMAND.COM 内部コマンド)
	Ret AX 0000H 正常終了
	       FFFFH コマンド実行中にエラー(メモリが足りない等)
	       その他 コマンドより返されたリターンコード
	破壊 CS:IP, AX 以外全て
	備考 DS:SI で指定すべきコマンドラインの構造
	00h	BYTE	CR を含めない, コマンドラインの長さ
	01h	STRING	コマンドライン文字列 (最後は CR)

□INT 2FH
〇1203h DOS DATA SEGMENT 取得
	[内部]
	IN  AX 1203H
	Ret DS DOS DATA SEGMENT ADDRESS (MSDOS.SYS, IBMDOS.COM のデータ)


〇その他
	全て Undocumented だが, 有用そうな物をタイトルのみ集めた. 
	全て Interrupt List よりの引用である. 
	
    >--------D-2F1200-----------------------------
    >INT 2F U - DOS 3.0+ internal - INSTALLATION CHECK
    >--------D-2F1201-----------------------------
    >INT 2F U - DOS 3.0+ internal - CLOSE CURRENT FILE
    >--------D-2F1202-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET INTERRUPT ADDRESS
    >--------D-2F1203-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET DOS DATA SEGMENT
    >--------D-2F1204-----------------------------
    >INT 2F U - DOS 3.0+ internal - NORMALIZE PATH SEPARATOR
    >--------D-2F1205-----------------------------
    >INT 2F U - DOS 3.0+ internal - OUTPUT CHARACTER TO STANDARD OUTPUT
    >--------D-2F1206-----------------------------
    >INT 2F U - DOS 3.0+ internal - INVOKE CRITICAL ERROR
    >--------D-2F1207-----------------------------
    >INT 2F U - DOS 3.0+ internal - MAKE DISK BUFFER MOST-RECENTLY USED
    >--------D-2F1208-----------------------------
    >INT 2F U - DOS 3.0+ internal - DECREMENT SFT REFERENCE COUNT
    >--------D-2F1209-----------------------------
    >INT 2F U - DOS 3.0+ internal - FLUSH AND FREE DISK BUFFER
    >--------D-2F120A-----------------------------
    >INT 2F U - DOS 3.0+ internal - PERFORM CRITICAL ERROR INTERRUPT
    >--------D-2F120B-----------------------------
    >INT 2F U - DOS 3.0+ internal - SIGNAL SHARING VIOLATION TO USER
    >--------D-2F120C-----------------------------
    >INT 2F U - DOS 3.0+ internal - OPEN DEVICE AND SET SFT OWNER/MODE
    >--------D-2F120D-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET DATE AND TIME
    >--------D-2F120E-----------------------------
    >INT 2F U - DOS 3.0+ internal - MARK ALL DISK BUFFERS UNREFERENCED
    >--------D-2F120F-----------------------------
    >INT 2F U - DOS 3.0+ internal - MAKE BUFFER MOST RECENTLY USED
    >--------D-2F1210-----------------------------
    >INT 2F U - DOS 3.0+ internal - FIND UNREFERENCED DISK BUFFER
    >--------D-2F1211-----------------------------
    >INT 2F U - DOS 3.0+ internal - NORMALIZE ASCIZ FILENAME
    >--------D-2F1212-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET LENGTH OF ASCIZ STRING
    >--------D-2F1213-----------------------------
    >INT 2F U - DOS 3.0+ internal - UPPERCASE CHARACTER
    >--------D-2F1214-----------------------------
    >INT 2F U - DOS 3.0+ internal - COMPARE FAR POINTERS
    >--------D-2F1215-----------------------------
    >INT 2F U - DOS 3.0+ internal - FLUSH BUFFER
    >--------D-2F1216-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET ADDRESS OF SYSTEM FILE TABLE ENTRY
    >--------D-2F1217-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET CURRENT DIRECTORY STRUCTURE FOR DRIVE
    >--------D-2F1218-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET CALLER'S REGISTERS
    >--------D-2F121A-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET FILE'S DRIVE
    >--------D-2F121B-----------------------------
    >INT 2F U - DOS 3.0+ internal - SET YEAR/LENGTH OF FEBRUARY
    >--------D-2F121C-----------------------------
    >INT 2F U - DOS 3.0+ internal - CHECKSUM MEMORY
    >--------D-2F121D-----------------------------
    >INT 2F U - DOS 3.0+ internal - SUM MEMORY
    >--------D-2F121E-----------------------------
    >INT 2F U - DOS 3.0+ internal - COMPARE FILENAMES
    >--------D-2F121F-----------------------------
    >INT 2F U - DOS 3.0+ internal - BUILD CURRENT DIRECTORY STRUCTURE
    >--------D-2F1220-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET JOB FILE TABLE ENTRY
    >--------D-2F1221-----------------------------
    >INT 2F U - DOS 3.0+ internal - CANONICALIZE FILE NAME
    >--------D-2F1222-----------------------------
    >INT 2F U - DOS 3.0+ internal - SET EXTENDED ERROR INFO
    >--------D-2F1223-----------------------------
    >INT 2F U - DOS 3.0+ internal - CHECK IF CHARACTER DEVICE
    >--------D-2F1224-----------------------------
    >INT 2F U - DOS 3.0+ internal - SHARING RETRY DELAY
    >--------D-2F1225-----------------------------
    >INT 2F U - DOS 3.0+ internal - GET LENGTH OF ASCIZ STRING
    >--------D-2F1226-----------------------------
    >INT 2F U - DOS 3.3+ internal - OPEN FILE
    >--------D-2F1227-----------------------------
    >INT 2F U - DOS 3.3+ internal - CLOSE FILE
    >--------D-2F1228BP4200-----------------------
    >INT 2F U - DOS 3.3+ internal - MOVE FILE POINTER
    >--------D-2F1229-----------------------------
    >INT 2F U - DOS 3.3+ internal - READ FROM FILE
    >--------D-2F122A-----------------------------
    >INT 2F U - DOS 3.3+ internal - SET FASTOPEN ENTRY POINT
    >--------D-2F122B-----------------------------
    >INT 2F U - DOS 3.3+ internal - IOCTL
    >--------D-2F122C-----------------------------
    >INT 2F U - DOS 3.3+ internal - GET DEVICE CHAIN
    >--------D-2F122D-----------------------------
    >INT 2F U - DOS 3.3+ internal - GET EXTENDED ERROR CODE
    >--------D-2F122E-----------------------------
    >INT 2F U - DOS 4.0+ internal - GET OR SET ERROR TABLE ADDRESSES
    >--------D-2F13-------------------------------
    >INT 2F U - DOS 3.2+ - SET DISK INTERRUPT HANDLER


============================================================================
		  ＭＳ−ＤＯＳ資料 - デバイスドライバ篇

			  β版 Version 0.01

			  Written by kattyo.
============================================================================

	注意：未完成。一部嘘有り。


1. デバイスドライバの概要

  ｏ先頭の offset は 0h である。(ORG 0h)
  ｏ実行開始アドレスはプログラム先頭に固定されず、デバイスヘッダで指定す
    る（後述）。そのため END 疑似命令で指定する必要はない。
  ｏセグメントレジスタの値が全て同じとは限らない。そのため、作業領域を参
    照するには、強制的に DS レジスタと CS レジスタの値を同じにするか、も
    しくはセグメントオーバーライド・プリフィックスをつけなければならない。
  ｏ使用できるスタックは 20 WORD 程度しか用意されていない。
  ｏデバイスヘッダが必要である（後述）。
  ｏルーチンは FAR CALL されるので、戻るには FAR RET しなければならない。

2. デバイスヘッダ

  デバイスヘッダとは、  デバイスドライバの先頭に置くテーブルのことで、  
MS-DOS  がデバイスドライバを組み込んだり呼び出したりするときに必要とする
情報を書き並べた部分です。このデバイスヘッダには、デバイス属性、処理ルー
チンのアドレス、それにデバイス名（キャラクタ型デバイスの場合）またはドラ
イブの数（ブロック型デバイス）などの情報が置かれます。

DEVICE_HEADER	LABEL WORD
	DD	?		;次のデバイスドライバへのリンク情報
	DW	?		;デバイス属性
	DW	?		;ストラテジルーチン  オフセット・アドレス
	DW	?		;割込ルーチン  エントリ・アドレス
	DB	'________'	;デバイス名 (8 bytes, Charactor Device)
				; or サポートドライブ数(1 byte, Block Device)


2.1  次のデバイスドライバへのリンク情報

  ファイル内にデバイスドライバが１つだけの場合は FFFFFFFFh に設定する。


2.2  デバイス属性（デバイスアトリビュート）

bit 15	デバイスドライバ種別 1:キャラクタデバイス(C) 0:ブロックデバイス(B)
bit 14	B:IOCTLサポート		C:IOCTLサポート
bit 13	B:NON FAT-ID		C:OUTPUT UNTIL BUSY サポート
bit 12	0
bit 11	OPEN/CLOSE/RemovableMedia サポート
bit 10	0
bit  9	0
bit  8	0
bit  7	一般 IOCTL 問い合わせのサポート (DOS 5+)
bit  6	一般 IOCTL サポート
bit  5	0
bit  4	B:0			C:CON デバイス (INT 29h サポート)
bit  3	B:0			C:CLOCK デバイス
bit  2	B:0			C:NUL デバイス
bit  1	B:32bit セクタ(DOS 5+)	C:標準出力
bit  0	B:0			C:標準入力


2.3  個別属性について

2.3.1  IOCTL サポート (bit 14)

	　DOS のファンクションコール AX=4402h 〜 4405h に対応した機能を
	デバイスドライバが備えているか。

2.3.2 NON FAT-ID (bit 13, Block Device)

	　交換性の重要なメディアの場合は１、RAMDISK などは０。

2.3.3 OUTPUT UNTIL BUSY (bit 13, Charactor Device)

	　キャラクタデバイス用デバイスリクエストの OUTPUT UNTIL BUSY を
	サポートするかどうか。

2.3.4 OPEN/CLOSE/RemovableMedia サポート (bit 11)

	　DEVICE OPEN, DEVICE CLOSE (ブロックデバイスの場合は RemovableMedia
	も含む) をデバイスドライバがサポートしているかどうか。

2.3.5 一般 IOCTL 問い合わせ サポート (bit 7) (DOS 5+)

	　DOS のファンクション AX=4410h, 4411h に対応しているかどうか。

2.3.6 一般 IOCTL サポート (bit 6) (DOS 3.3+)

	　DOS のファンクション AX=440Ch, 440Dh に対応しているかどうか。

2.3.7 高速コンソール出力 (INT 29h) (bit 4, Charactor Device)

	　キャラクタデバイスで、かつ CON デバイスで、かつ標準出力機能を
	もつ場合のみ意味をもつ。WRITE リクエスト及び INT 29h をサポート
	しなければならない。

2.3.8 CLOCK デバイス (bit 3)

	　CLOCK デバイス（詳細は割愛）である事を示すビット。

2.3.9 NUL デバイス (bit 2)

	　作成しても意味はない（組み込み済み NUL デバイスが機能してしまう）。
	NUL デバイスであることを示す。

2.3.10 32bit セクタ (bit 1, Block Device)

	　ブロックデバイスが 32 bit アクセス可能なことを示す。

2.3.11 標準出力 (bit 1, Charactor Device)
2.3.12 標準入力 (bit 1, Charactor Device)

	　組み込み済み標準入出力デバイスを置き換える際に必要。
	ある時点で標準入出力デバイスとなり得るのは、１つだけである。


2.4  ストラテジルーチン

　ストラテジ・ルーチンでは、DOS から渡されたリクエストパケットの
アドレス (ES:BX) を保存する。
  ストラテジ・ルーチンが MS-DOS により呼び出された時、 ES:BX に、 コマン
ドパケットのアドレスが入っているので保存用の領域をあらかじめ用意しておき、
保存する。
　このルーチンが呼び出された直後に、DOS によってコマンドパケット処理ルーチン
が呼ばれる。
　このルーチン内では全てのレジスタの内容を破壊してはならない。

PACKET	DD	?

STRATEGY	PROC	FAR
		MOV	WORD PTR PACKET, BX
		MOV	WORD PTR PACKET[2], ES
		RET
STRATEGY	ENDP


3. コマンドパケット処理ルーチン

  コマンドが正常に終了した場合は、コマンドパケットの Done ビットをセットす
る。

コマンドパケット内オフセット:

STRUC	REQPKT
PKTSIZ	DB	?	;パケットのサイズ
UNITNUM	DB	?	;ユニット番号
COMMAND	DB	?	;リクエストコマンド
ERRCODE	DB	?	;エラーコード
STATUS	DB	?	;ステータスコード b7:ERR b1:BUSY b0:DONE
RES	DB	8 DUP(0);予約領域
any	any	any	;（各処理に応じてパケットが続く）
	ENDS

TRANS	EQU	14	;READ/WRITE 時などの転送アドレスオフセット (DWORD)
COUNT	EQU	18	;READ/WRITE 時などの転送バイト数 (WORD)

コマンド首里ルーチンオフセットアドレステーブル:

CMDTBL		LABEL	WORD
INIT		DW	? ; 0  0 初期化 (1度必ず呼ばれる)
MEDIA_CHECK	DW	? ; 2  1 メディアが交換されたか調べる
BUILD_BPB	DW	? ; 4  2 BPB を作成する
IOCTL_INPUT	DW	? ; 6  3 デバイスドライバ自身からデータを入力する
INPUT		DW	? ; 8  4 デバイスからデータを入力する (READ)
SCAN_BUF_HEADER	DW	? ; A  5 入力バッファの先頭1BYTEを調べる
INPUT_STATUS	DW	? ; C  6 入力バッファの内容が空かどうか調べる
INPUT_FLUSH	DW	? ; E  7 入力バッファの内容をフラッシュする
OUTPUT		DW	? ;10  8 デバイスへデータを出力する (WRITE)
OUTPUT_VERIFY	DW	? ;12  9 デバイスへベリファイ付きでデータ出力
OUTPUT_STATUS	DW	? ;14  A 出力バッファ内にデータが残っているか調べる
OUTPUT_FLUSH	DW	? ;16  B 出力バッファの内容をフラッシュする
IOCTL_OUTPUT	DW	? ;18  C デバイスドライバ自身へデータを渡す
;以下は MS-DOS ver 3.1 以降
DEVICE_OPEN	DW	? ;1A  D デバイスのオープン
DEVICE_CLOSE	DW	? ;1C  E デバイスのクローズ
MEDIA_REMOVABLE	DW	? ;1E  F 交換可能なデバイスかどうか調べる
OUTPUTUNTILBUSY	DW	? ;20 10 デバイスが BUSY になるまで出力する
		DW	0 ;   11
		DW	0 ;   12
GENERIC_IOCTL	DW	? ;22 13 デバイス属性 bit 6 が 1 のデバイスのみ有効
DEINSTALL	DW	? ;   14 アンインストール
GET_DRV_MAP	DW	? ;24 12 デバイス属性 bit 6 が 1 のデバイスのみ有効
SET_DRV_MAP	DW	? ;26 13 デバイス属性 bit 6 が 1 のデバイスのみ有効
IOCTL_QUERY	DW	? ;   19 IOCTL 問い合わせ

ENTRY	PROC	FAR
	;; レジスタ保存（省略）
	LDS	BX, CS:PACKET	;コマンドパケットのアドレス取得
	LES	DI, [BX+TRANS]	;コマンドパケットから転送アドレス取得
	MOV	CX, [BX+COUNT]	;コマンドパケットから転送バイト数取得
	MOV	AL, [BX+COMMAND];コマンドパケットからコマンドワード取得
	CBW			;AL -> AX
	CMP	AX, 12		;AX が 12 (DOS 3.1+なら 19) より上ならエラー
	JA	CMD_NO_ERR
	SHL	AX, 1		;AX = AX*2
	MOV	SI, AX
	JMP	WORD PTR CS:CMDTBL[SI]	;各処理ルーチンへ飛ぶ

CMD_NO_ERR:
	MOV	AX, 8103H
	JMP	ENTRY_END


3.1 各リクエスト解説

3.1.0 INIT (00h)

INIT リクエストでは DOS バージョンや動作環境などのチェック、重複ロードチェック、I/O やベクタ初期化・設定などを行う。

REQ_INIT:
	UNIT_NUM	BYTE	;サポートする論理ユニット数(BlkDev)
	END_ADDR	DWORD	;ドライバが使用可能な最終アドレス。
	BPB_PTR		DWORD	;"DEVICE="行の'='以降の文字列のアドレス
	DEVNO		BYTE	;使用する最初の論理ユニット番号(BlkDev)
	MSGFLAG		WORD	;(DOS 5+)エラー時DOSにその旨を表示させるか。

	UNIT_NUM (BlkDev)
		サポートする論理ユニット数をセットする。
	END_ADDR (BlkDev)
		IN:
			使用可能な最終メモリアドレス。
		OUT:
			常駐終了アドレス。
			DPB の直前アドレス。
			このアドレスの次のパラグラフ境界より DPB が始まる。
			常駐しない場合は、デバイスドライバの先頭をセットする。
	BPB_PTR
		'DEVICE=' 行の '=' の次へのポインタ。
		DEVICE=ABCD.SYS /param
		の場合、
		ABCD.SYS /param<CR>
		となる。
		最後の <CR> は 00h の時もある。
		デバイス名と /param の間に 00h が入り込む場合がある。
		ADDDRV の時は 00h が必ず入り込む。
		
		DEINSTALL リクエストを処理できる場合は、
		この値を反転させておく。
		
		例:NOT	CS:[BPB_PTR]

	DEVNO (BlkDev)
		自分のドライバが使用する論理ドライブ番号。
		ブロックデバイスのとき、GET LOGICAL DRIVE をサポートする場合は
		必ずこの値を保存する。
	
	MSGFLAG
		DOS 5 以降で、CONFIG.SYS の処理に失敗したときに
		「CONFIG.SYS のxx行目に誤りがあります」
		を DOS によって表示させるかどうか。
		STATUS に ERROR を指定したときに有効。
		1 だと表示され、0 だと表示されない。

	使用可能な DOS ファンクション
		01h〜0Ch,025h,035h
		Undocumented だが、実際には多くのファンクションが使えるらしい。
		(詳しくは HSB の作者の masao 氏が開発した DRVEXEC のドキュ
		メントファイルを参照)

## 現在作成中。完成未定。
